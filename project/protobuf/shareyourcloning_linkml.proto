 syntax="proto3";
 package
// metamodel_version: 1.7.0
// Represents the source of a sequence that is identified by an AddGene id
message AddGeneIdSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  string repositoryId = 0
  repositoryName repositoryName = 0
  string sequenceFileUrl = 0
  addGeneSequenceType addgeneSequenceType = 0
 }
// Represents a fragment in an assembly
message AssemblyFragment
 {
  sequence sequence = 0
  simpleSequenceLocation leftLocation = 0
  simpleSequenceLocation rightLocation = 0
  boolean reverseComplemented = 0
 }
// Represents the source of a sequence that is an assembly of other sequences
message AssemblySource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  boolean circular = 0
 repeated  assemblyFragment assembly = 0
 }
// Represents the source of a sequence that is identified by a Benchling URL
message BenchlingUrlSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  repositoryName repositoryName = 0
  string repositoryId = 0
 }
// Represents a cloning strategy
message CloningStrategy
 {
 repeated  sequence sequences = 0
 repeated  source sources = 0
 repeated  primer primers = 0
  string description = 0
 }
// Represents the source of a sequence that is generated by CRISPR
message CRISPRSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  boolean circular = 0
 repeated  assemblyFragment assembly = 0
 repeated  primer guides = 0
 }
// Represents the source of a sequence that is identified by genome coordinates, requested from NCBI
message GenomeCoordinatesSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  string assemblyAccession = 0
  string sequenceAccession = 0
  string locusTag = 0
  integer geneId = 0
  integer start = 0
  integer end = 0
  integer strand = 0
 }
// Represents the source of a sequence that is generated by Gibson assembly
message GibsonAssemblySource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  boolean circular = 0
 repeated  assemblyFragment assembly = 0
 }
// Represents the source of a sequence that is generated by homologous recombination
message HomologousRecombinationSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  boolean circular = 0
 repeated  assemblyFragment assembly = 0
 }
// Represents the source of a sequence that is generated by ligation with sticky or blunt ends.
message LigationSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  boolean circular = 0
 repeated  assemblyFragment assembly = 0
 }
// Represents the source of a sequence that is manually typed by the user
message ManuallyTypedSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  integer overhangCrick3prime = 0
  integer overhangWatson3prime = 0
  string userInput = 0
  boolean circular = 0
 }
message NamedThing
 {
  integer id = 0
 }
// Represents the source of a sequence that is generated by oligo hybridization
message OligoHybridizationSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  integer overhangCrick3prime = 0
  primer forwardOligo = 0
  primer reverseOligo = 0
 }
// Represents the source of a sequence that is generated by ligation of PCR products as part of overlap extension PCR. Algorithmically equivalent to Gibson assembly.
message OverlapExtensionPCRLigationSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  boolean circular = 0
 repeated  assemblyFragment assembly = 0
 }
// Represents the source of a sequence that is generated by PCR
message PCRSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  boolean circular = 0
 repeated  assemblyFragment assembly = 0
 }
// Represents the source of a sequence that is generated by polymerase extension
message PolymeraseExtensionSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
 }
// An oligonucleotide or primer
message Primer
 {
  integer id = 0
  string type = 0
  string name = 0
  string sequence = 0
 }
// Represents the source of a sequence that is identified by a repository id
message RepositoryIdSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  string repositoryId = 0
  repositoryName repositoryName = 0
 }
// Represents the source of a sequence that is generated by restriction and ligation
message RestrictionAndLigationSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  boolean circular = 0
 repeated  assemblyFragment assembly = 0
 repeated  string restrictionEnzymes = 0
 }
// Represents the source of a sequence that is a subfragment of another sequence, generated by sequence cutting using restriction enzymes.
message RestrictionEnzymeDigestionSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  restrictionSequenceCut leftEdge = 0
  restrictionSequenceCut rightEdge = 0
 }
// Represents a cut in a DNA sequence that is made by a restriction enzyme
message RestrictionSequenceCut
 {
  integer cutWatson = 0
  integer overhang = 0
  string restrictionEnzyme = 0
 }
// Represents a cut in a DNA sequence
message SequenceCut
 {
  integer cutWatson = 0
  integer overhang = 0
 }
// Represents the source of a sequence that is a subfragment of another sequence, generated by sequence cutting.
message SequenceCutSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  sequenceCut leftEdge = 0
  sequenceCut rightEdge = 0
 }
// Represents a location within a sequence, for now support for ranges only
message SimpleSequenceLocation
 {
  integer start = 0
  integer end = 0
  integer strand = 0
 }
// A sequence (may have features) defined by the content of a text file
message TextFileSequence
 {
  integer id = 0
  string type = 0
  sequenceFileFormat sequenceFileFormat = 0
  integer overhangCrick3prime = 0
  integer overhangWatson3prime = 0
  string fileContent = 0
 }
// Represents the source of a sequence that is uploaded as a file
message UploadedFileSource
 {
  integer id = 0
 repeated  sequence input = 0
  sequence output = 0
  string type = 0
  string outputName = 0
  sequenceFileFormat sequenceFileFormat = 0
  string fileName = 0
  integer indexInFile = 0
  boolean circularize = 0
 }
